{"version":3,"sources":["components/Searching.module.css","loader/Loader.module.css","components/Weather.module.css","components/WeatherMini/WeatherMini.module.css","img/cloudy-night.svg","img/cloudy-day.svg","img/thunder.svg","img/drizzle.svg","img/rainy.svg","img/snowy.svg","img/day.svg","loader/Loader.jsx","components/Weather.jsx","components/Main.jsx","api/api.js","components/Searching.jsx","components/WeatherMini/WeatherMini.jsx","components/WeekForecast.jsx","components/WeeksForecastContainer.jsx","components/MainContainer.jsx","App.js","index.js","components/WeeksForecast.module.css","components/Main.module.css"],"names":["module","exports","Loader","className","s","wrapper","lds_ellipsis","Weather","props","img","icon","cloudyNight","thunder","drizzle","rainy","snow","clearDay","weatherBlock","onClick","setWeekForecast","isOpen","city","name","weather","deleteCity","delete","button","location","mainInfo","src","alt","temp","Math","round","weatherType","description","feelsLike","feels_like","Main","isFixedClass","isFixed","main","fixed","currentGeo","locations","map","isSearching","modalButton","setIsSearching","instance","axios","baseURL","weatherApi","lat","lon","get","then","res","data","list","Searching","modal","modal__inner","onSubmit","e","preventDefault","target","cityName","value","trim","getWeatherByName","form","type","input","placeholder","WeatherMini","weatherMini","time","info","WeekForecast","weeksForecast","week","length","close","title","day","Date","toLocaleString","weekday","dayTitle","dayItems","spaceBetween","slidesPerView","initialSlide","breakpoints","450","800","1200","item","findDay","dayName","dt_txt","replace","createArr","arr","elem","month","hour","minute","WeeksForecastContainer","useState","setWeek","useEffect","filter","catch","err","alert","document","body","classList","add","remove","MainContainer","isLoader","setIsLoader","setCurrentGeo","weekForecast","setLocations","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","JSON","parse","localStorage","getItem","forEach","setItem","stringify","some","loc","prevLocations","id","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.03906d2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Searching_modal__2A60Y\",\"show\":\"Searching_show__3DOmI\",\"modal__inner\":\"Searching_modal__inner__3bhxZ\",\"modalButton\":\"Searching_modalButton__liT8s\",\"form\":\"Searching_form__2rToz\",\"input\":\"Searching_input__1HoWC\",\"button\":\"Searching_button__2iy_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__3B_q5\",\"lds_ellipsis\":\"Loader_lds_ellipsis__K7ng4\",\"lds-ellipsis1\":\"Loader_lds-ellipsis1__T82Y6\",\"lds-ellipsis2\":\"Loader_lds-ellipsis2__3Zb_4\",\"lds-ellipsis3\":\"Loader_lds-ellipsis3__3fIHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"Weather_weather__3Hnsz\",\"location\":\"Weather_location__J2mfK\",\"mainInfo\":\"Weather_mainInfo__2xk3z\",\"img\":\"Weather_img__SnwHS\",\"temp\":\"Weather_temp__3-2kx\",\"weatherType\":\"Weather_weatherType__FpgMP\",\"feelsLike\":\"Weather_feelsLike__3y-G7\",\"delete\":\"Weather_delete__3_Mnl\",\"button\":\"Weather_button__1ievD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherMini\":\"WeatherMini_weatherMini__1koQM\",\"time\":\"WeatherMini_time__PvjOI\",\"info\":\"WeatherMini_info__1DNmO\",\"description\":\"WeatherMini_description__1tcgy\",\"temp\":\"WeatherMini_temp__2J20d\"};","export default __webpack_public_path__ + \"static/media/cloudy-night.4a43954d.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-day.7fb7ecfc.svg\";","export default __webpack_public_path__ + \"static/media/thunder.19ff3c30.svg\";","export default __webpack_public_path__ + \"static/media/drizzle.44fb8223.svg\";","export default __webpack_public_path__ + \"static/media/rainy.130d6250.svg\";","export default __webpack_public_path__ + \"static/media/snowy.dce3f5e7.svg\";","export default __webpack_public_path__ + \"static/media/day.c33ef664.svg\";","import React from 'react';\r\nimport s from './Loader.module.css';\r\n\r\n\r\nlet Loader = () => {\r\n    return(\r\n        <div className = {s.wrapper}>\r\n            <div className = {s.lds_ellipsis}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n   \r\n    )\r\n}\r\n\r\nexport default Loader;","import s from './Weather.module.css';\r\n\r\n//ICONS\r\nimport cloudyDay from '../img/cloudy-day.svg';\r\nimport cloudyNight from '../img/cloudy-night.svg';\r\nimport thunder from '../img/thunder.svg';\r\nimport drizzle from '../img/drizzle.svg';\r\nimport rainy from '../img/rainy.svg';\r\nimport snow from '../img/snowy.svg';\r\nimport clearDay from '../img/day.svg';\r\nimport Loader from '../loader/Loader';\r\n\r\nconst Weather = (props) => {\r\n    let img;\r\n    switch (props.icon){\r\n        case \"Clouds\": \r\n            img = cloudyNight\r\n            break;\r\n\r\n        case \"Thunderstorm\": \r\n            img = thunder;\r\n            break;\r\n\r\n        case \"Drizzle\": \r\n            img = drizzle;\r\n            break;\r\n\r\n        case \"Rain\": \r\n            img = rainy;\r\n            break;\r\n\r\n        case \"Snow\": \r\n            img = snow;\r\n            break;\r\n\r\n        case \"Clear\":\r\n            img = clearDay;\r\n            break;\r\n\r\n        default: \r\n            img = clearDay;\r\n            break;\r\n    }\r\n    return(\r\n        <div className = {s.weatherBlock} onClick = { () => props.setWeekForecast( { isOpen: true, city: props.name } ) }>\r\n            <div className = {s.weather}>\r\n                {props.deleteCity && \r\n                <div className = {s.delete}>\r\n                  <button className = {s.button} onClick = { () => props.deleteCity(props.name) } > X </button>\r\n                </div>\r\n                }\r\n                <div className = {s.location}>\r\n                    {props.name}\r\n                </div>\r\n                <div className = {s.mainInfo}>\r\n                    <div className = {s.img}>\r\n                        <img src = {img} alt=\"\"/>\r\n                    </div>\r\n                    <div className = {s.temp}>\r\n                        {Math.round(props.temp) + '°C'}\r\n                    </div>\r\n                </div>\r\n                <div className = {s.weatherType}>{props.description}</div>\r\n                <div className = {s.feelsLike}>Ощущается как: {Math.round(props.feels_like)}°C</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather;","import Weather from './Weather';\r\nimport s from './Main.module.css';\r\n\r\nconst Main = (props) => {\r\n    const isFixedClass = props.isFixed ? `${s.main} ${s.fixed}` : `${s.main}`;\r\n    return(\r\n        <div className = {isFixedClass}>\r\n            <Weather \r\n            name = {props.currentGeo.name} \r\n            temp = {props.currentGeo.temp}\r\n            weather = {props.currentGeo.weather}\r\n            feels_like = {props.currentGeo.feels_like}\r\n            icon = {props.currentGeo.icon}\r\n            description = {props.currentGeo.description}\r\n            setWeekForecast = {props.setWeekForecast}\r\n            />\r\n\r\n            {props.locations.map( location =>  \r\n                <Weather\r\n                deleteCity = {props.deleteCity}\r\n                name = {location.name} \r\n                temp = {location.temp}\r\n                weather = {location.weather}\r\n                feels_like = {location.feels_like}\r\n                icon = {location.icon}\r\n                setWeekForecast = {props.setWeekForecast}\r\n                description = {location.description} />\r\n            )}\r\n\r\n            {props.isSearching \r\n            ? <button className = {s.modalButton} onClick = { () => props.setIsSearching(false) }>-</button>\r\n            : <button className = {s.modalButton} onClick = { () => props.setIsSearching(true) } >+</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.openweathermap.org/data/2.5/\"\r\n})\r\n\r\nexport const weatherApi = {\r\n    byCoord(lat,lon){\r\n        return instance.get(`weather?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=471fb871540b1cabfd3ed0bce031cb0d`)\r\n    },\r\n    \r\n    byCityName(city){\r\n        return instance.get(`weather?q=${city}&units=metric&lang=ru&appid=471fb871540b1cabfd3ed0bce031cb0d`)\r\n    },\r\n\r\n    forWeek(city){\r\n        return instance.get(`forecast?q=${city}&lang=ru&units=metric&appid=471fb871540b1cabfd3ed0bce031cb0d`)\r\n        .then( res => res.data.list ) \r\n    }\r\n}\r\n\r\n","import s from './Searching.module.css';\r\n\r\nconst Searching = (props) => {\r\n    return(\r\n        <div className = {s.modal}>\r\n            <div className = {s.modal__inner}>\r\n                <form onSubmit = {(e) => {\r\n                    e.preventDefault();\r\n                    let city = e.target.cityName.value.trim();\r\n                    if(city){\r\n                        props.getWeatherByName(city);\r\n                        e.target.cityName.value = '';\r\n                        props.setIsSearching(false);\r\n                    }\r\n                }} className = {s.form}>\r\n                    <input name = \"cityName\" type=\"text\" className = {s.input} placeholder = \"Введите место...\"/>\r\n                    <button type = 'submit' className = {s.button} >Поиск</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searching;","import s from './WeatherMini.module.css';\r\n\r\n// ICONS\r\nimport cloudyDay from '../../img/cloudy-day.svg';\r\nimport cloudyNight from '../../img/cloudy-night.svg';\r\nimport thunder from '../../img/thunder.svg';\r\nimport drizzle from '../../img/drizzle.svg';\r\nimport rainy from '../../img/rainy.svg';\r\nimport snow from '../../img/snowy.svg';\r\nimport clearDay from '../../img/day.svg';\r\n\r\nconst WeatherMini = (props) => {\r\n    let img;\r\n    switch (props.data.weather.main){\r\n        case \"Clouds\": \r\n            img = cloudyNight\r\n            break;\r\n\r\n        case \"Thunderstorm\": \r\n            img = thunder;\r\n            break;\r\n\r\n        case \"Drizzle\": \r\n            img = drizzle;\r\n            break;\r\n\r\n        case \"Rain\": \r\n            img = rainy;\r\n            break;\r\n\r\n        case \"Snow\": \r\n            img = snow;\r\n            break;\r\n\r\n        case \"Clear\":\r\n            img = clearDay;\r\n            break;\r\n\r\n        default: \r\n            img = clearDay;\r\n            break;\r\n    }\r\n    return(\r\n        <div className = {s.weatherMini}>\r\n            <div className = {s.time}>\r\n                {props.data.time}\r\n            </div>\r\n            <div className = {s.info}>\r\n                <div className = {s.img}>\r\n                    <img src = {img} alt=\"\"/>\r\n                </div>\r\n                <div className = {s.temp}>\r\n                    {Math.round(props.data.temp) + \"°C\"}\r\n                </div>\r\n            </div>\r\n            <div className = {s.weather}>\r\n                <p className = {s.description}>\r\n                    {props.data.weather.description}\r\n                </p>\r\n                <p className = {s.description}>\r\n                    {\"Ощущается как: \" + Math.round(props.data.feels_like)}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherMini;","import s from './WeeksForecast.module.css';\r\nimport WeatherMini from './WeatherMini/WeatherMini';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.css';\r\nimport Loader from '../loader/Loader';\r\n\r\nconst WeekForecast = (props) => {\r\n    \r\n    return(\r\n        <>\r\n        <div className = {s.weeksForecast}>\r\n            {props.week.length > 0 \r\n            ? \r\n                <div className=\"container\">\r\n                    <button className = {s.close} onClick = { () => props.setWeekForecast({isOpen: false}) } >X</button>\r\n                    <div className = {s.title}>\r\n                        { props.city }\r\n                    </div>\r\n                    {props.week.map( day => {\r\n                    if( !(day.data.length > 0) || ( day.day == new Date().toLocaleString(\"ru\", { weekday: \"long\" }) ) ) return;\r\n                    return(\r\n                        <div className = {s.day}>\r\n                            <div className = {s.dayTitle}>\r\n                                {day.day}\r\n                            </div>\r\n                            <div className = {s.dayItems}>\r\n                                <Swiper\r\n                                spaceBetween = {50} \r\n                                slidesPerView = {1}\r\n                                initialSlide = {4}\r\n                                breakpoints = { {\r\n                                    450 : {slidesPerView:2},\r\n                                    800 : {slidesPerView:3},\r\n                                    1200 : {slidesPerView:4},\r\n                                    }}>\r\n                                    {day.data.map( (item) =>\r\n                                    <SwiperSlide >\r\n                                        <WeatherMini data = {item} /> \r\n                                    </SwiperSlide> \r\n                                    )}\r\n                                </Swiper>    \r\n                            </div>  \r\n                        </div> ) \r\n                    })\r\n                    }\r\n            </div>\r\n            : <Loader /> }\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeekForecast;","import react, {useState, useEffect} from 'react';\r\nimport WeekForecast from './WeekForecast';\r\nimport {weatherApi} from '../api/api';\r\n\r\n // HELPEES\r\n function findDay(day, dayName){\r\n    let date = new Date(day.dt_txt.replace(' ','T')).toLocaleString(\"ru\", {weekday: \"long\"} );\r\n    return ( date == dayName);\r\n}\r\n\r\nfunction createArr (arr){\r\n    return(\r\n        arr.map( ( elem => {\r\n            let time = new Date( elem.dt_txt.replace(' ','T') ).toLocaleString(\"ru\", {\r\n            month: \"long\", \r\n            day: \"numeric\", \r\n            // weekday: \"long\", \r\n            hour: \"numeric\",\r\n            minute: \"numeric\" } );\r\n            return {\r\n                time,\r\n                temp: elem.main.temp, \r\n                feels_like: elem.main.feels_like,\r\n                weather: elem.weather[0]\r\n                }\r\n            } )\r\n    )\r\n    )\r\n}\r\n// END HELPERS\r\n\r\nconst WeeksForecastContainer = (props) => {\r\n\r\n    const [week, setWeek] = useState([]);\r\n\r\n    useEffect( () => {\r\n        weatherApi.forWeek(props.city).then( res => {\r\n            // alert(JSON.stringify(res))\r\n            setWeek( [\r\n                { day: 'понедельник', data: createArr( res.filter( (day) => findDay( day, 'понедельник') ) ) },\r\n                { day: 'вторник', data: createArr( res.filter( (day) => findDay( day, 'вторник') ) ) },\r\n                { day: 'среда', data: createArr( res.filter( (day) => findDay( day, 'среда') ) ) },\r\n                { day: 'четверг', data: createArr( res.filter( (day) => findDay( day, 'четверг') ) ) },\r\n                { day: 'пятница', data: createArr( res.filter( (day) => findDay( day, 'пятница') ) ) },\r\n                { day: 'суббота', data: createArr( res.filter( (day) => findDay( day, 'суббота') ) ) },\r\n                { day: 'воскресенье', data: createArr( res.filter( (day) => findDay( day, 'воскресенье') ) ) },\r\n            ]);\r\n        }).catch( err => alert(err) ); \r\n\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        document.body.classList.add('block-scroll');\r\n        return () => document.body.classList.remove('block-scroll');\r\n    }, [] )\r\n\r\n    return(\r\n       <WeekForecast setWeekForecast = {props.setWeekForecast} city = {props.city} week = {week} />\r\n    )\r\n}\r\n\r\nexport default WeeksForecastContainer;\r\n","import react, {useEffect, useState} from 'react';\r\nimport Main from './Main';\r\nimport {weatherApi} from '../api/api';\r\nimport Searching from './Searching';\r\nimport Loader from '../loader/Loader';\r\nimport WeeksForecastContainer from './WeeksForecastContainer';\r\n\r\nconst MainContainer = () => {\r\n\r\n    const [isLoader, setIsLoader] = useState(true);\r\n    const [currentGeo, setCurrentGeo] = useState({});\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [weekForecast, setWeekForecast] = useState({ isOpen: false, city: null });\r\n    const [locations, setLocations] = useState([]);\r\n\r\n    useEffect( () => {\r\n        navigator.geolocation.getCurrentPosition( (data) => {\r\n            weatherApi.byCoord(data.coords.latitude, data.coords.longitude).then( res => {\r\n\r\n                let {temp,feels_like} = res.data.main;\r\n                let {name} = res.data;\r\n                let {description,main:icon} = res.data.weather[0];\r\n                setCurrentGeo({temp,feels_like,name,description,icon});\r\n                setIsLoader(false);\r\n\r\n            } )\r\n        }, () => {\r\n            alert(\"Ошибка! Вы не дали доступа к гео-позиции!\");\r\n            setIsLoader(false);\r\n        } );\r\n\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        let elements  = JSON.parse( localStorage.getItem('locations') ) || [];\r\n        elements.forEach( elem => getWeatherByName(elem) );\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem( 'locations', JSON.stringify( locations.map( elem => elem.name ) ) )\r\n    }, [locations] )\r\n\r\n    const getWeatherByName = (cityName) => {\r\n        if( !locations.some( loc => loc.name == cityName ) ){\r\n            setIsLoader(true);\r\n            weatherApi.byCityName(cityName)\r\n            .then( res => {\r\n    \r\n                let {temp, feels_like} = res.data.main;\r\n                let {description, main:icon} = res.data.weather[0];\r\n                \r\n                setLocations( prevLocations => [ {temp, feels_like, name: cityName, description, icon, id: 1} , ...prevLocations ] );\r\n                setIsLoader(false);\r\n            } )\r\n            .catch( err => {\r\n                alert(`Город ${cityName} не найден :(`)\r\n            });\r\n        } else alert(`Вы уже добавили город ${cityName}`)\r\n    }\r\n\r\n    const deleteCity = (cityName) => {\r\n        setLocations( prevLocations => prevLocations.filter( loc => loc.name !== cityName ) );\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {isLoader \r\n        ? <Loader />\r\n        : <Main     \r\n          currentGeo = {currentGeo} \r\n          setIsSearching = {setIsSearching}\r\n          isSearching = {isSearching} \r\n          locations = {locations} \r\n          deleteCity = {deleteCity} \r\n          setWeekForecast = {setWeekForecast}\r\n          isFixed = {weekForecast.isOpen} />\r\n        }\r\n        { isSearching && \r\n        <Searching\r\n        setIsSearching = {setIsSearching}\r\n        getWeatherByName = {getWeatherByName}/> }\r\n        \r\n        { weekForecast.isOpen &&\r\n        <WeeksForecastContainer setWeekForecast = {setWeekForecast} city = { weekForecast.city } />\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainContainer;","import React from 'react'\nimport MainContainer from './components/MainContainer';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <MainContainer />\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weeksForecast\":\"WeeksForecast_weeksForecast__1kw5A\",\"button\":\"WeeksForecast_button__F_pq7\",\"close\":\"WeeksForecast_close__1dsTj\",\"title\":\"WeeksForecast_title__1AzOD\",\"day\":\"WeeksForecast_day__1zSlL\",\"dayTitle\":\"WeeksForecast_dayTitle__2m8Kx\",\"dayItems\":\"WeeksForecast_dayItems__DdVxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3fzSv\",\"modal\":\"Main_modal__12qLN\",\"show\":\"Main_show__tU-hz\",\"modal__inner\":\"Main_modal__inner__35MS-\",\"modalButton\":\"Main_modalButton__25jSV\",\"form\":\"Main_form__283FA\",\"input\":\"Main_input__dhsNj\",\"button\":\"Main_button__2FQPJ\"};"],"sourceRoot":""}
{"version":3,"sources":["components/Searching.module.css","loader/Loader.module.css","components/Weather.module.css","img/cloudy-night.svg","img/cloudy-day.svg","img/thunder.svg","img/drizzle.svg","img/rainy.svg","img/snowy.svg","img/day.svg","loader/Loader.jsx","components/Weather.jsx","img/icons/search-icon.svg","img/icons/close.svg","components/Main.jsx","api/api.js","components/Searching.jsx","components/WeatherMini/WeatherMini.jsx","components/WeekForecast.jsx","components/WeeksForecastContainer.jsx","components/MainContainer.jsx","App.js","index.js","components/WeatherMini/WeatherMini.module.css","components/WeeksForecast.module.css","components/Main.module.css"],"names":["module","exports","Loader","className","s","wrapper","lds_ellipsis","Weather","props","img","icon","cloudyNight","thunder","drizzle","rainy","snow","clearDay","weatherBlock","weather","deleteCity","delete","button","onClick","name","location","moreInfo","setWeekForecast","isOpen","city","mainInfo","src","alt","temp","Math","round","weatherType","description","feelsLike","feels_like","Main","main","currentGeo","locations","map","isSearching","modalButton","setIsSearching","closeIcon","searchIcon","instance","axios","baseURL","weatherApi","lat","lon","get","then","res","data","list","Searching","console","log","cities","citiesEl","value","modal","modal__inner","onSubmit","e","preventDefault","target","cityName","trim","getWeatherByName","form","type","input","placeholder","autoComplete","id","WeatherMini","weatherMini","time","info","WeekForecast","weeksForecast","week","length","close","title","day","dayTitle","dayItems","spaceBetween","slidesPerView","initialSlide","breakpoints","450","800","1200","item","findDay","today","Date","dt_txt","replace","getDate","createArr","arr","elem","toLocaleString","month","hour","minute","WeeksForecastContainer","useState","setWeek","useEffect","filter","catch","err","alert","document","body","classList","add","remove","MainContainer","isLoader","setIsLoader","isErr","setIsErr","setCurrentGeo","weekForecast","setLocations","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","JSON","parse","localStorage","getItem","forEach","setItem","stringify","some","loc","prevLocations","isFixed","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0fc37658.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Searching_modal__2A60Y\",\"show\":\"Searching_show__3DOmI\",\"modal__inner\":\"Searching_modal__inner__3bhxZ\",\"modalButton\":\"Searching_modalButton__liT8s\",\"form\":\"Searching_form__2rToz\",\"input\":\"Searching_input__1HoWC\",\"button\":\"Searching_button__2iy_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__3B_q5\",\"lds_ellipsis\":\"Loader_lds_ellipsis__K7ng4\",\"lds-ellipsis1\":\"Loader_lds-ellipsis1__T82Y6\",\"lds-ellipsis2\":\"Loader_lds-ellipsis2__3Zb_4\",\"lds-ellipsis3\":\"Loader_lds-ellipsis3__3fIHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"Weather_weather__3Hnsz\",\"location\":\"Weather_location__J2mfK\",\"mainInfo\":\"Weather_mainInfo__2xk3z\",\"moreInfo\":\"Weather_moreInfo__3NcWV\",\"img\":\"Weather_img__SnwHS\",\"temp\":\"Weather_temp__3-2kx\",\"weatherType\":\"Weather_weatherType__FpgMP\",\"feelsLike\":\"Weather_feelsLike__3y-G7\",\"delete\":\"Weather_delete__3_Mnl\",\"button\":\"Weather_button__1ievD\"};","export default __webpack_public_path__ + \"static/media/cloudy-night.4a43954d.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-day.7fb7ecfc.svg\";","export default __webpack_public_path__ + \"static/media/thunder.19ff3c30.svg\";","export default __webpack_public_path__ + \"static/media/drizzle.44fb8223.svg\";","export default __webpack_public_path__ + \"static/media/rainy.130d6250.svg\";","export default __webpack_public_path__ + \"static/media/snowy.dce3f5e7.svg\";","export default __webpack_public_path__ + \"static/media/day.c33ef664.svg\";","import React from 'react';\r\nimport s from './Loader.module.css';\r\n\r\n\r\nlet Loader = () => {\r\n    return(\r\n        <div className = {s.wrapper}>\r\n            <div className = {s.lds_ellipsis}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n   \r\n    )\r\n}\r\n\r\nexport default Loader;","import s from './Weather.module.css';\r\n\r\n//ICONS\r\nimport cloudyDay from '../img/cloudy-day.svg';\r\nimport cloudyNight from '../img/cloudy-night.svg';\r\nimport thunder from '../img/thunder.svg';\r\nimport drizzle from '../img/drizzle.svg';\r\nimport rainy from '../img/rainy.svg';\r\nimport snow from '../img/snowy.svg';\r\nimport clearDay from '../img/day.svg';\r\nimport Loader from '../loader/Loader';\r\n\r\nconst Weather = (props) => {\r\n    let img;\r\n    switch (props.icon){\r\n        case \"Clouds\": \r\n            img = cloudyNight\r\n            break;\r\n\r\n        case \"Thunderstorm\": \r\n            img = thunder;\r\n            break;\r\n\r\n        case \"Drizzle\": \r\n            img = drizzle;\r\n            break;\r\n\r\n        case \"Rain\": \r\n            img = rainy;\r\n            break;\r\n\r\n        case \"Snow\": \r\n            img = snow;\r\n            break;\r\n\r\n        case \"Clear\":\r\n            img = clearDay;\r\n            break;\r\n\r\n        default: \r\n            img = clearDay;\r\n            break;\r\n    }\r\n    return(\r\n        <div className = {s.weatherBlock} >\r\n            <div className = {s.weather}>\r\n                {props.deleteCity && \r\n                <div className = {s.delete}>\r\n                  <button className = {s.button} onClick = { () => props.deleteCity(props.name) } > X </button>\r\n                </div>\r\n                }\r\n                <div className = {s.location}>\r\n                    {props.name}\r\n                </div>\r\n                <div className = {s.moreInfo} onClick = { () => props.setWeekForecast( { isOpen: true, city: props.name } ) }>\r\n                    Нажмите для подробного прогноза\r\n                </div>\r\n                <div className = {s.mainInfo}>\r\n                    <div className = {s.img}>\r\n                        <img src = {img} alt=\"\"/>\r\n                    </div>\r\n                    <div className = {s.temp}>\r\n                        {Math.round(props.temp) + '°C'}\r\n                    </div>\r\n                </div>\r\n                <div className = {s.weatherType}>{props.description}</div>\r\n                <div className = {s.feelsLike}>Ощущается как: {Math.round(props.feels_like)}°C</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather;","export default __webpack_public_path__ + \"static/media/search-icon.2bf2ffa7.svg\";","export default __webpack_public_path__ + \"static/media/close.c79edd95.svg\";","import Weather from './Weather';\r\nimport s from './Main.module.css';\r\nimport searchIcon from './../img/icons/search-icon.svg'\r\nimport closeIcon from './../img/icons/close.svg'\r\n\r\nconst Main = (props) => {\r\n    return(\r\n        <div className = {s.main}>\r\n\r\n            {props.currentGeo.temp && \r\n            <Weather \r\n            name = {props.currentGeo.name} \r\n            temp = {props.currentGeo.temp}\r\n            weather = {props.currentGeo.weather}\r\n            feels_like = {props.currentGeo.feels_like}\r\n            icon = {props.currentGeo.icon}\r\n            description = {props.currentGeo.description}\r\n            setWeekForecast = {props.setWeekForecast}\r\n            />\r\n            }\r\n            {props.locations.map( location =>  \r\n                <Weather\r\n                deleteCity = {props.deleteCity}\r\n                name = {location.name} \r\n                temp = {location.temp}\r\n                weather = {location.weather}\r\n                feels_like = {location.feels_like}\r\n                icon = {location.icon}\r\n                setWeekForecast = {props.setWeekForecast}\r\n                description = {location.description} />\r\n            )}\r\n\r\n            {props.isSearching \r\n            ? <button className = {s.modalButton} onClick = { () => props.setIsSearching(false) }>\r\n                <img src = {closeIcon} alt=\"closeIcon\"/>\r\n              </button>\r\n            : <button className = {s.modalButton} onClick = { () => props.setIsSearching(true) } >\r\n                <img src = {searchIcon} alt=\"searchIcon\"/>\r\n              </button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.openweathermap.org/data/2.5/\"\r\n})\r\n\r\nexport const weatherApi = {\r\n    byCoord(lat,lon){\r\n        return instance.get(`weather?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=471fb871540b1cabfd3ed0bce031cb0d`)\r\n    },\r\n    \r\n    byCityName(city){\r\n        return instance.get(`weather?q=${city}&units=metric&lang=ru&appid=471fb871540b1cabfd3ed0bce031cb0d`)\r\n    },\r\n\r\n    forWeek(city){\r\n        return instance.get(`forecast?q=${city}&lang=ru&units=metric&appid=471fb871540b1cabfd3ed0bce031cb0d`)\r\n        .then( res => res.data.list ) \r\n    }\r\n}\r\n\r\n","import s from './Searching.module.css';\r\nimport cities from '../cities.json';\r\n\r\nconst Searching = (props) => {\r\n    console.log(cities);\r\n    let citiesEl = cities.map( city => <> <option value = {`${city.city}`} /> </> )\r\n    return(\r\n        <div className = {s.modal}>\r\n            <div className = {s.modal__inner}>\r\n                <form onSubmit = {(e) => {\r\n                    e.preventDefault();\r\n                    let city = e.target.cityName.value.trim();\r\n                    if(city){\r\n                        props.getWeatherByName(city);\r\n                        e.target.cityName.value = '';\r\n                        props.setIsSearching(false);\r\n                    }\r\n                }} className = {s.form}>\r\n                    <input name = \"cityName\" type=\"text\" className = {s.input} placeholder = \"Введите место...\" list = \"cities\" autoComplete = \"off\"/>\r\n                    <datalist id = \"cities\">\r\n                        {citiesEl}\r\n                    </datalist>\r\n                    <button type = 'submit' className = {s.button} >Поиск</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searching;","import s from './WeatherMini.module.css';\r\n\r\n// ICONS\r\nimport cloudyDay from '../../img/cloudy-day.svg';\r\nimport cloudyNight from '../../img/cloudy-night.svg';\r\nimport thunder from '../../img/thunder.svg';\r\nimport drizzle from '../../img/drizzle.svg';\r\nimport rainy from '../../img/rainy.svg';\r\nimport snow from '../../img/snowy.svg';\r\nimport clearDay from '../../img/day.svg';\r\n\r\nconst WeatherMini = (props) => {\r\n    let img;\r\n    switch (props.data.weather.main){\r\n        case \"Clouds\": \r\n            img = cloudyNight\r\n            break;\r\n\r\n        case \"Thunderstorm\": \r\n            img = thunder;\r\n            break;\r\n\r\n        case \"Drizzle\": \r\n            img = drizzle;\r\n            break;\r\n\r\n        case \"Rain\": \r\n            img = rainy;\r\n            break;\r\n\r\n        case \"Snow\": \r\n            img = snow;\r\n            break;\r\n\r\n        case \"Clear\":\r\n            img = clearDay;\r\n            break;\r\n\r\n        default: \r\n            img = clearDay;\r\n            break;\r\n    }\r\n    return(\r\n        <div className = {s.weatherMini}>\r\n            <div className = {s.time}>\r\n                {props.data.time}\r\n            </div>\r\n            <div className = {s.info}>\r\n                <div className = {s.img}>\r\n                    <img src = {img} alt=\"\"/>\r\n                </div>\r\n                <div className = {s.temp}>\r\n                    {Math.round(props.data.temp) + \"°C\"}\r\n                </div>\r\n            </div>\r\n            <div className = {s.weather}>\r\n                <p className = {s.description}>\r\n                    {props.data.weather.description}\r\n                </p>\r\n                <p className = {s.description}>\r\n                    {\"Ощущается как: \" + Math.round(props.data.feels_like)}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherMini;","import s from './WeeksForecast.module.css';\r\nimport WeatherMini from './WeatherMini/WeatherMini';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.css';\r\nimport Loader from '../loader/Loader';\r\nimport closeIcon from './../img/icons/close.svg'\r\n\r\nconst WeekForecast = (props) => {\r\n    console.log(props);\r\n    \r\n    return(\r\n        <>\r\n        <div className = {s.weeksForecast}>\r\n            {props.week.length > 0 \r\n            ? \r\n                <div className=\"container\">\r\n                    <button className = {s.close} onClick = { () => props.setWeekForecast({isOpen: false}) } >\r\n                        <img src = {closeIcon} alt=\"closeIcon\"/>\r\n                    </button>\r\n                    <div className = {s.title}>\r\n                        { props.city }\r\n                    </div>\r\n                    {props.week.map( day => {\r\n                    // if( !(day.data.length > 0) ) return;\r\n                    return(\r\n                        <div className = {s.day}>\r\n                            <div className = {s.dayTitle}>\r\n                                {day.day}\r\n                            </div>\r\n                            <div className = {s.dayItems}>\r\n                                <Swiper\r\n                                spaceBetween = {50} \r\n                                slidesPerView = {1}\r\n                                initialSlide = {4}\r\n                                breakpoints = { {\r\n                                    450 : {slidesPerView:2},\r\n                                    800 : {slidesPerView:3},\r\n                                    1200 : {slidesPerView:4},\r\n                                    }}>\r\n                                    {day.data.map( (item) =>\r\n                                    <SwiperSlide >\r\n                                        <WeatherMini data = {item} /> \r\n                                    </SwiperSlide> \r\n                                    )}\r\n                                </Swiper>    \r\n                            </div>  \r\n                        </div> ) \r\n                    })\r\n                    }\r\n            </div>\r\n            : <Loader /> }\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeekForecast;","import react, {useState, useEffect} from 'react';\r\nimport WeekForecast from './WeekForecast';\r\nimport {weatherApi} from '../api/api';\r\n\r\n // HELPEES\r\n//  function findDay(day, dayName){\r\n//     let date = new Date(day.dt_txt.replace(' ','T')).toLocaleString(\"ru\", {weekday: \"long\"} );\r\n//     return ( date == dayName);\r\n// } \r\nfunction findDay(day, today){\r\n    let date = new Date(day.dt_txt.replace(' ','T')).getDate();\r\n    return ( date == today);\r\n}\r\n\r\nfunction createArr (arr){\r\n    return(\r\n        arr.map( ( elem => {\r\n            let time = new Date( elem.dt_txt.replace(' ','T') ).toLocaleString(\"ru\", {\r\n            month: \"long\", \r\n            day: \"numeric\", \r\n            // weekday: \"long\", \r\n            hour: \"numeric\",\r\n            minute: \"numeric\" } );\r\n            return {\r\n                time,\r\n                temp: elem.main.temp, \r\n                feels_like: elem.main.feels_like,\r\n                weather: elem.weather[0]\r\n                }\r\n            } )\r\n    )\r\n    )\r\n}\r\n// END HELPERS\r\n\r\nconst WeeksForecastContainer = (props) => {\r\n\r\n    const [week, setWeek] = useState([]);\r\n\r\n    useEffect( () => {\r\n        weatherApi.forWeek(props.city).then( res => {\r\n            // alert(JSON.stringify(res))\r\n            let today = new Date().getDate();\r\n            let month = new Date().toLocaleString(\"ru\", {month: \"long\"});\r\n            setWeek( [\r\n                { day: 'сегодня', data: createArr( res.filter( (day) => findDay( day, today ) ) ) },\r\n                { day: 'завтра', data: createArr( res.filter( (day) => findDay( day, ( +today + 1 ) ) ) ) },\r\n                { day: `${today + 2} ${month}`, data: createArr( res.filter( (day) => findDay( day, ( +today + 2 ) ) ) ) },\r\n                { day: `${today + 3} ${month}`, data: createArr( res.filter( (day) => findDay( day, ( +today + 3 ) ) ) ) },\r\n                { day: `${today + 4} ${month}`, data: createArr( res.filter( (day) => findDay( day, ( +today + 4 ) ) ) ) },\r\n                { day: `${today + 5} ${month}`, data: createArr( res.filter( (day) => findDay( day, ( +today + 5 ) ) ) ) },\r\n                // { day: 'поне1дельник', data: createArr( res.filter( (day) => findDay( day, 'понедельник') ) ) },\r\n                // { day: 'вторник', data: createArr( res.filter( (day) => findDay( day, 'вторник') ) ) },\r\n                // { day: 'среда', data: createArr( res.filter( (day) => findDay( day, 'среда') ) ) },\r\n                // { day: 'четверг', data: createArr( res.filter( (day) => findDay( day, 'четверг') ) ) },\r\n                // { day: 'пятница', data: createArr( res.filter( (day) => findDay( day, 'пятница') ) ) },\r\n                // { day: 'суббота', data: createArr( res.filter( (day) => findDay( day, 'суббота') ) ) },\r\n                // { day: 'воскресенье', data: createArr( res.filter( (day) => findDay( day, 'воскресенье') ) ) },\r\n            ]);\r\n        }).catch( err => alert(err) ); \r\n\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        document.body.classList.add('block-scroll');\r\n        return () => document.body.classList.remove('block-scroll');\r\n    }, [] )\r\n\r\n    return(\r\n       <WeekForecast setWeekForecast = {props.setWeekForecast} city = {props.city} week = {week} />\r\n    )\r\n}\r\n\r\nexport default WeeksForecastContainer;\r\n","import react, {useEffect, useState} from 'react';\r\nimport Main from './Main';\r\nimport {weatherApi} from '../api/api';\r\nimport Searching from './Searching';\r\nimport Loader from '../loader/Loader';\r\nimport WeeksForecastContainer from './WeeksForecastContainer';\r\nimport s from './Main.module.css';\r\n\r\nconst MainContainer = () => {\r\n\r\n    const [isLoader, setIsLoader] = useState(true);\r\n    const [isErr, setIsErr] = useState(false);\r\n    const [currentGeo, setCurrentGeo] = useState({});\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [weekForecast, setWeekForecast] = useState({ isOpen: false, city: null });\r\n    const [locations, setLocations] = useState([]);\r\n\r\n    useEffect( () => {\r\n        navigator.geolocation.getCurrentPosition( (data) => {\r\n            weatherApi.byCoord(data.coords.latitude, data.coords.longitude).then( res => {\r\n\r\n                let {temp,feels_like} = res.data.main;\r\n                let {name} = res.data;\r\n                let {description,main:icon} = res.data.weather[0];\r\n                setCurrentGeo({temp,feels_like,name,description,icon});\r\n                setIsLoader(false);\r\n\r\n            } )\r\n        }, () => {\r\n            setIsLoader(false);\r\n            setIsErr(true)\r\n        } );\r\n\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        let elements  = JSON.parse( localStorage.getItem('locations') ) || [];\r\n        elements.forEach( elem => getWeatherByName(elem) );\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem( 'locations', JSON.stringify( locations.map( elem => elem.name ) ) )\r\n    }, [locations] )\r\n\r\n    const getWeatherByName = (cityName) => {\r\n        if( !locations.some( loc => loc.name == cityName ) ){\r\n            setIsLoader(true);\r\n            weatherApi.byCityName(cityName)\r\n            .then( res => {\r\n    \r\n                let {temp, feels_like} = res.data.main;\r\n                let {description, main:icon} = res.data.weather[0];\r\n                \r\n                setLocations( prevLocations => [ {temp, feels_like, name: cityName, description, icon, id: 1} , ...prevLocations ] );\r\n                setIsLoader(false);\r\n            } )\r\n            .catch( err => {\r\n                alert(`Город ${cityName} не найден :(`)\r\n                setIsLoader(false);\r\n            });\r\n        } else alert(`Вы уже добавили город ${cityName}`)\r\n    }\r\n\r\n    const deleteCity = (cityName) => {\r\n        setLocations( prevLocations => prevLocations.filter( loc => loc.name !== cityName ) );\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {isErr && \r\n            <div className = {s.err}> Вы не дали доступа к гео-данным! Воспользуйтесь поиском внизу! </div>\r\n        }\r\n        {isLoader \r\n        ? <Loader />\r\n        : <Main     \r\n          isErr = {isErr}\r\n          currentGeo = {currentGeo} \r\n          setIsSearching = {setIsSearching}\r\n          isSearching = {isSearching} \r\n          locations = {locations} \r\n          deleteCity = {deleteCity} \r\n          setWeekForecast = {setWeekForecast}\r\n          isFixed = {weekForecast.isOpen} />\r\n        }\r\n        { isSearching && \r\n        <Searching\r\n        setIsSearching = {setIsSearching}\r\n        getWeatherByName = {getWeatherByName}/> }\r\n        \r\n        { weekForecast.isOpen &&\r\n        <WeeksForecastContainer setWeekForecast = {setWeekForecast} city = { weekForecast.city } />\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainContainer;","import React from 'react'\nimport MainContainer from './components/MainContainer';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <MainContainer />\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherMini\":\"WeatherMini_weatherMini__1koQM\",\"time\":\"WeatherMini_time__PvjOI\",\"info\":\"WeatherMini_info__1DNmO\",\"description\":\"WeatherMini_description__1tcgy\",\"temp\":\"WeatherMini_temp__2J20d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weeksForecast\":\"WeeksForecast_weeksForecast__1kw5A\",\"close\":\"WeeksForecast_close__1dsTj\",\"title\":\"WeeksForecast_title__1AzOD\",\"day\":\"WeeksForecast_day__1zSlL\",\"dayTitle\":\"WeeksForecast_dayTitle__2m8Kx\",\"dayItems\":\"WeeksForecast_dayItems__DdVxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3fzSv\",\"err\":\"Main_err__ltrov\",\"modal\":\"Main_modal__12qLN\",\"show\":\"Main_show__tU-hz\",\"modal__inner\":\"Main_modal__inner__35MS-\",\"modalButton\":\"Main_modalButton__25jSV\",\"form\":\"Main_form__283FA\",\"input\":\"Main_input__dhsNj\",\"button\":\"Main_button__2FQPJ\"};"],"sourceRoot":""}
{"version":3,"sources":["components/WeeksForecast.module.css","loader/Loader.module.css","components/Weather.module.css","components/WeatherMini/WeatherMini.module.css","img/cloudy-night.svg","img/cloudy-day.svg","img/thunder.svg","img/drizzle.svg","img/rainy.svg","img/snowy.svg","img/day.svg","loader/Loader.jsx","components/Weather.jsx","components/Main.jsx","api/api.js","components/Searching.jsx","components/WeatherMini/WeatherMini.jsx","components/WeekForecast.jsx","components/WeeksForecastContainer.jsx","components/MainContainer.jsx","App.js","reportWebVitals.js","index.js","components/Main.module.css","components/Searching.module.css"],"names":["module","exports","Loader","className","s","wrapper","lds_ellipsis","Weather","props","img","icon","cloudyNight","thunder","drizzle","rainy","snow","clearDay","weatherBlock","onClick","setWeekForecast","isOpen","city","name","weather","deleteCity","delete","button","location","mainInfo","src","alt","temp","Math","round","weatherType","feelsLike","feels_like","Main","isFixedClass","isFixed","main","fixed","currentGeo","locations","map","isSearching","modalButton","setIsSearching","instance","axios","baseURL","weatherApi","lat","lon","get","then","res","data","list","Searching","modal","modal__inner","onSubmit","e","preventDefault","target","cityName","value","trim","getWeatherByName","form","type","input","placeholder","WeatherMini","weatherMini","time","info","description","WeekForecast","console","log","week","weeksForecast","length","title","day","dayTitle","dayItems","spaceBetween","slidesPerView","initialSlide","item","findDay","dayName","Date","dt_txt","toLocaleString","weekday","createArr","arr","elem","month","hour","minute","WeeksForecastContainer","useState","setWeek","useEffect","filter","MainContainer","isLoader","setIsLoader","setCurrentGeo","weekForecast","setLocations","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","alert","JSON","parse","localStorage","getItem","forEach","setItem","stringify","some","loc","prevLocations","id","catch","err","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da73ba54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weeksForecast\":\"WeeksForecast_weeksForecast__1kw5A\",\"title\":\"WeeksForecast_title__1AzOD\",\"day\":\"WeeksForecast_day__1zSlL\",\"dayTitle\":\"WeeksForecast_dayTitle__2m8Kx\",\"dayItems\":\"WeeksForecast_dayItems__DdVxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__3B_q5\",\"lds_ellipsis\":\"Loader_lds_ellipsis__K7ng4\",\"lds-ellipsis1\":\"Loader_lds-ellipsis1__T82Y6\",\"lds-ellipsis2\":\"Loader_lds-ellipsis2__3Zb_4\",\"lds-ellipsis3\":\"Loader_lds-ellipsis3__3fIHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"Weather_weather__3Hnsz\",\"location\":\"Weather_location__J2mfK\",\"mainInfo\":\"Weather_mainInfo__2xk3z\",\"img\":\"Weather_img__SnwHS\",\"temp\":\"Weather_temp__3-2kx\",\"weatherType\":\"Weather_weatherType__FpgMP\",\"feelsLike\":\"Weather_feelsLike__3y-G7\",\"delete\":\"Weather_delete__3_Mnl\",\"button\":\"Weather_button__1ievD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherMini\":\"WeatherMini_weatherMini__1koQM\",\"time\":\"WeatherMini_time__PvjOI\",\"info\":\"WeatherMini_info__1DNmO\",\"description\":\"WeatherMini_description__1tcgy\",\"temp\":\"WeatherMini_temp__2J20d\"};","export default __webpack_public_path__ + \"static/media/cloudy-night.4a43954d.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-day.7fb7ecfc.svg\";","export default __webpack_public_path__ + \"static/media/thunder.19ff3c30.svg\";","export default __webpack_public_path__ + \"static/media/drizzle.44fb8223.svg\";","export default __webpack_public_path__ + \"static/media/rainy.130d6250.svg\";","export default __webpack_public_path__ + \"static/media/snowy.dce3f5e7.svg\";","export default __webpack_public_path__ + \"static/media/day.c33ef664.svg\";","import React from 'react';\r\nimport s from './Loader.module.css';\r\n\r\n\r\nlet Loader = () => {\r\n    return(\r\n        <div className = {s.wrapper}>\r\n            <div className = {s.lds_ellipsis}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n   \r\n    )\r\n}\r\n\r\nexport default Loader;","import s from './Weather.module.css';\r\n\r\n//ICONS\r\nimport cloudyDay from '../img/cloudy-day.svg';\r\nimport cloudyNight from '../img/cloudy-night.svg';\r\nimport thunder from '../img/thunder.svg';\r\nimport drizzle from '../img/drizzle.svg';\r\nimport rainy from '../img/rainy.svg';\r\nimport snow from '../img/snowy.svg';\r\nimport clearDay from '../img/day.svg';\r\nimport Loader from '../loader/Loader';\r\n\r\nconst Weather = (props) => {\r\n    let img;\r\n    switch (props.icon){\r\n        case \"Clouds\": \r\n            img = cloudyNight\r\n            break;\r\n\r\n        case \"Thunderstorm\": \r\n            img = thunder;\r\n            break;\r\n\r\n        case \"Drizzle\": \r\n            img = drizzle;\r\n            break;\r\n\r\n        case \"Rain\": \r\n            img = rainy;\r\n            break;\r\n\r\n        case \"Snow\": \r\n            img = snow;\r\n            break;\r\n\r\n        case \"Clear\":\r\n            img = clearDay;\r\n            break;\r\n\r\n        default: \r\n            img = clearDay;\r\n            break;\r\n    }\r\n    return(\r\n        <div className = {s.weatherBlock} onClick = { () => props.setWeekForecast( { isOpen: true, city: props.name } ) }>\r\n            <div className = {s.weather}>\r\n                {props.deleteCity && \r\n                <div className = {s.delete}>\r\n                  <button className = {s.button} onClick = { () => props.deleteCity(props.name) } > X </button>\r\n                </div>\r\n                }\r\n                <div className = {s.location}>\r\n                    {props.name}\r\n                </div>\r\n                <div className = {s.mainInfo}>\r\n                    <div className = {s.img}>\r\n                        <img src = {img} alt=\"\"/>\r\n                    </div>\r\n                    <div className = {s.temp}>\r\n                        {Math.round(props.temp) + '°C'}\r\n                    </div>\r\n                </div>\r\n                <div className = {s.weatherType}>{props.weather}</div>\r\n                <div className = {s.feelsLike}>Ощущается как: {Math.round(props.feels_like)}°C</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather;","import Weather from './Weather';\r\nimport s from './Main.module.css';\r\n\r\nconst Main = (props) => {\r\n    const isFixedClass = props.isFixed ? `${s.main} ${s.fixed}` : `${s.main}`;\r\n    return(\r\n        <div className = {isFixedClass}>\r\n            <Weather \r\n            name = {props.currentGeo.name} \r\n            temp = {props.currentGeo.temp}\r\n            weather = {props.currentGeo.weather}\r\n            feels_like = {props.currentGeo.feels_like}\r\n            icon = {props.currentGeo.icon}\r\n            setWeekForecast = {props.setWeekForecast}\r\n            />\r\n\r\n            {props.locations.map( location =>  \r\n                <Weather\r\n                deleteCity = {props.deleteCity}\r\n                name = {location.name} \r\n                temp = {location.temp}\r\n                weather = {location.weather}\r\n                feels_like = {location.feels_like}\r\n                icon = {location.icon}\r\n                setWeekForecast = {props.setWeekForecast} />\r\n            )}\r\n\r\n            {props.isSearching \r\n            ? <button className = {s.modalButton} onClick = { () => props.setIsSearching(false) }>-</button>\r\n            : <button className = {s.modalButton} onClick = { () => props.setIsSearching(true) } >+</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.openweathermap.org/data/2.5/\"\r\n})\r\n\r\nexport const weatherApi = {\r\n    byCoord(lat,lon){\r\n        return instance.get(`weather?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=471fb871540b1cabfd3ed0bce031cb0d`)\r\n    },\r\n    \r\n    byCityName(city){\r\n        return instance.get(`weather?q=${city}&units=metric&lang=ru&appid=471fb871540b1cabfd3ed0bce031cb0d`)\r\n    },\r\n\r\n    forWeek(city){\r\n        return instance.get(`forecast?q=${city}&lang=ru&units=metric&appid=471fb871540b1cabfd3ed0bce031cb0d`)\r\n        .then( res => res.data.list ) \r\n    }\r\n}\r\n\r\n","import s from './Searching.module.css';\r\n\r\nconst Searching = (props) => {\r\n    return(\r\n        <div className = {s.modal}>\r\n            <div className = {s.modal__inner}>\r\n                <form onSubmit = {(e) => {\r\n                    e.preventDefault();\r\n                    let city = e.target.cityName.value.trim();\r\n                    if(city){\r\n                        props.getWeatherByName(city);\r\n                        e.target.cityName.value = '';\r\n                        props.setIsSearching(false);\r\n                    }\r\n                }} className = {s.form}>\r\n                    <input name = \"cityName\" type=\"text\" className = {s.input} placeholder = \"Введите место...\"/>\r\n                    <button type = 'submit' className = {s.button} >Поиск</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searching;","import s from './WeatherMini.module.css';\r\n\r\n// ICONS\r\nimport cloudyDay from '../../img/cloudy-day.svg';\r\nimport cloudyNight from '../../img/cloudy-night.svg';\r\nimport thunder from '../../img/thunder.svg';\r\nimport drizzle from '../../img/drizzle.svg';\r\nimport rainy from '../../img/rainy.svg';\r\nimport snow from '../../img/snowy.svg';\r\nimport clearDay from '../../img/day.svg';\r\n\r\nconst WeatherMini = (props) => {\r\n    let img;\r\n    switch (props.data.weather.main){\r\n        case \"Clouds\": \r\n            img = cloudyNight\r\n            break;\r\n\r\n        case \"Thunderstorm\": \r\n            img = thunder;\r\n            break;\r\n\r\n        case \"Drizzle\": \r\n            img = drizzle;\r\n            break;\r\n\r\n        case \"Rain\": \r\n            img = rainy;\r\n            break;\r\n\r\n        case \"Snow\": \r\n            img = snow;\r\n            break;\r\n\r\n        case \"Clear\":\r\n            img = clearDay;\r\n            break;\r\n\r\n        default: \r\n            img = clearDay;\r\n            break;\r\n    }\r\n    return(\r\n        <div className = {s.weatherMini}>\r\n            <div className = {s.time}>\r\n                {props.data.time}\r\n            </div>\r\n            <div className = {s.info}>\r\n                <div className = {s.img}>\r\n                    <img src = {img} alt=\"\"/>\r\n                </div>\r\n                <div className = {s.temp}>\r\n                    {Math.round(props.data.temp) + \"°C\"}\r\n                </div>\r\n            </div>\r\n            <div className = {s.weather}>\r\n                <p className = {s.description}>\r\n                    {props.data.weather.description}\r\n                </p>\r\n                <p className = {s.description}>\r\n                    {\"Ощущается как: \" + Math.round(props.data.feels_like)}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherMini;","import s from './WeeksForecast.module.css';\r\nimport WeatherMini from './WeatherMini/WeatherMini';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.css';\r\nimport Loader from '../loader/Loader';\r\n\r\nconst WeekForecast = (props) => {\r\n    console.log(props.week);\r\n    return(\r\n        <>\r\n        <div className = {s.weeksForecast}>\r\n            {props.week.length > 0 \r\n            ? \r\n                <div className=\"container\">\r\n                    <div className = {s.title}>\r\n                        { props.city }\r\n                    </div>\r\n\r\n                    {props.week.map( day => {\r\n                    // if( !(day.data.length > 0) || ( day.day == new Date().toLocaleString(\"ru\", { weekday: \"long\" }) ) ) return;\r\n                    return(\r\n                        <div className = {s.day}>\r\n                            <div className = {s.dayTitle}>\r\n                                {day.day}\r\n                            </div>\r\n                            <div className = {s.dayItems}>\r\n                                {props.week[0].data[0].temp}\r\n                                <Swiper\r\n                                spaceBetween = {50} \r\n                                slidesPerView = {1}\r\n                                initialSlide = {4}\r\n                                // breakpoints = { {\r\n                                //     600 : {slidesPerView:2}\r\n                                //     }}>\r\n                                >\r\n                                    {day.data.map( (item) =>\r\n                                    <SwiperSlide >\r\n                                        <WeatherMini data = {item} /> \r\n                                    </SwiperSlide> \r\n                                    )}\r\n                                </Swiper>    \r\n                            </div>  \r\n                        </div> ) \r\n                    })\r\n                    }\r\n            </div>\r\n            : <Loader /> }\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeekForecast;","import react, {useState, useEffect} from 'react';\r\nimport WeekForecast from './WeekForecast';\r\nimport {weatherApi} from '../api/api';\r\n\r\n// HELPEES\r\nconst findDay = (day, dayName) => {\r\n    let date = new Date(day.dt_txt).toLocaleString(\"ru\", {weekday: \"long\"} );\r\n    return ( date == dayName);\r\n}\r\n\r\nconst createArr = (arr) => {\r\n    return(\r\n        arr.map( ( elem => {\r\n            let time = new Date( elem.dt_txt ).toLocaleString(\"ru\", {\r\n            month: \"long\", \r\n            day: \"numeric\", \r\n            // weekday: \"long\", \r\n            hour: \"numeric\",\r\n            minute: \"numeric\" } );\r\n            return {\r\n                time,\r\n                temp: elem.main.temp, \r\n                feels_like: elem.main.feels_like,\r\n                weather: elem.weather[0]\r\n                }\r\n            } )\r\n     )\r\n    )\r\n}\r\n// END HELPERS\r\nconst WeeksForecastContainer = (props) => {\r\n    \r\n    const [week, setWeek] = useState([]);\r\n\r\n    useEffect( () => {\r\n        weatherApi.forWeek(props.city).then( res => {\r\n            let week = [\r\n                { day: 'понедельник', data: createArr( res.filter( (day) => findDay( day, 'понедельник') ) ) },\r\n                { day: 'вторник', data: createArr( res.filter( (day) => findDay( day, 'вторник') ) ) },\r\n                { day: 'среда', data: createArr( res.filter( (day) => findDay( day, 'среда') ) ) },\r\n                { day: 'четверг', data: createArr( res.filter( (day) => findDay( day, 'четверг') ) ) },\r\n                { day: 'пятница', data: createArr( res.filter( (day) => findDay( day, 'пятница') ) ) },\r\n                { day: 'суббота', data: createArr( res.filter( (day) => findDay( day, 'суббота') ) ) },\r\n                { day: 'воскресенье', data: createArr( res.filter( (day) => findDay( day, 'воскресенье') ) ) },\r\n            ]\r\n            setWeek(week);\r\n        }) \r\n\r\n    }, [] )\r\n\r\n    return(\r\n       <WeekForecast city = {props.city} week = {week} />\r\n    )\r\n}\r\n\r\nexport default WeeksForecastContainer;\r\n","import react, {useEffect, useState} from 'react';\r\nimport Main from './Main';\r\nimport {weatherApi} from '../api/api';\r\nimport Searching from './Searching';\r\nimport Loader from '../loader/Loader';\r\nimport WeeksForecastContainer from './WeeksForecastContainer';\r\n\r\nconst MainContainer = () => {\r\n\r\n    const [isLoader, setIsLoader] = useState(true);\r\n    const [currentGeo, setCurrentGeo] = useState({});\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [weekForecast, setWeekForecast] = useState({ isOpen: false, city: null });\r\n    const [locations, setLocations] = useState([]);\r\n\r\n    useEffect( () => {\r\n        navigator.geolocation.getCurrentPosition( (data) => {\r\n            weatherApi.byCoord(data.coords.latitude, data.coords.longitude).then( res => {\r\n\r\n                let {temp,feels_like} = res.data.main;\r\n                let {name} = res.data;\r\n                let {description,main:icon} = res.data.weather[0];\r\n                setCurrentGeo({temp,feels_like,name,description,icon});\r\n                setIsLoader(false);\r\n\r\n            } )\r\n        }, () => {\r\n            alert(\"Ошибка! Вы не дали доступа к гео-позиции!\")\r\n        } );\r\n\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        let elements  = JSON.parse( localStorage.getItem('locations') ) || [];\r\n        elements.forEach( elem => getWeatherByName(elem) );\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem( 'locations', JSON.stringify( locations.map( elem => elem.name ) ) )\r\n    }, [locations] )\r\n\r\n    const getWeatherByName = (cityName) => {\r\n        if( !locations.some( loc => loc.name == cityName ) ){\r\n            setIsLoader(true);\r\n            weatherApi.byCityName(cityName)\r\n            .then( res => {\r\n    \r\n                let {temp, feels_like} = res.data.main;\r\n                let {description, main:icon} = res.data.weather[0];\r\n                \r\n                setLocations( prevLocations => [ {temp, feels_like, name: cityName, description, icon, id: 1} , ...prevLocations ] );\r\n                setIsLoader(false);\r\n            } )\r\n            .catch( err => {\r\n                alert(`Город ${cityName} не найден :(`)\r\n            });\r\n        } else alert(`Вы уже добавили город ${cityName}`)\r\n    }\r\n\r\n    const deleteCity = (cityName) => {\r\n        setLocations( prevLocations => prevLocations.filter( loc => loc.name !== cityName ) );\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {isLoader \r\n        ? <Loader />\r\n        : <Main     \r\n          currentGeo = {currentGeo} \r\n          setIsSearching = {setIsSearching}\r\n          isSearching = {isSearching} \r\n          locations = {locations} \r\n          deleteCity = {deleteCity} \r\n          setWeekForecast = {setWeekForecast}\r\n          isFixed = {weekForecast.isOpen} />\r\n        }\r\n        { isSearching && \r\n        <Searching\r\n        setIsSearching = {setIsSearching}\r\n        getWeatherByName = {getWeatherByName}/> }\r\n        \r\n        { weekForecast.isOpen &&\r\n        <WeeksForecastContainer city = { weekForecast.city } />\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainContainer;","import React from 'react'\nimport MainContainer from './components/MainContainer';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <MainContainer />\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3fzSv\",\"modal\":\"Main_modal__12qLN\",\"show\":\"Main_show__tU-hz\",\"modal__inner\":\"Main_modal__inner__35MS-\",\"modalButton\":\"Main_modalButton__25jSV\",\"form\":\"Main_form__283FA\",\"input\":\"Main_input__dhsNj\",\"button\":\"Main_button__2FQPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Searching_modal__2A60Y\",\"show\":\"Searching_show__3DOmI\",\"modal__inner\":\"Searching_modal__inner__3bhxZ\",\"modalButton\":\"Searching_modalButton__liT8s\",\"form\":\"Searching_form__2rToz\",\"input\":\"Searching_input__1HoWC\",\"button\":\"Searching_button__2iy_0\"};"],"sourceRoot":""}